    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; KCPSM3 Program - Practice Picoblaze on Spartan-3A Starter Kit.
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; The 8 LEDs provide a simple 'heart beat' counter driven by interrupts generated at
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; one second intervals.
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Port definitions
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-LED_port
   OPERAND2-80
    COMMENT-;8 simple LEDs. Is an OUTPUT port.
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-DATA_IN_PORT
   OPERAND2-00
    COMMENT-;input data port. this is an INPUT port.
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-led0
   OPERAND2-40
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Special Register usage
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; No registers are given special names in this program.
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Scratch Pad Memory Locations
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ISR_preserve_s0
   OPERAND2-00
    COMMENT-;Preserve s0 contents during ISR
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ISR_preserve_s1
   OPERAND2-01
    COMMENT-;Preserve s1 contents during ISR
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ISR_preserve_s2
   OPERAND2-02
    COMMENT-;Preserve s2 contents during ISR
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ISR_preserve_s3
   OPERAND2-03
    COMMENT-;Preserve s3 contents during ISR
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ISR_preserve_s4
   OPERAND2-04
    COMMENT-;Preserve s3 contents during ISR
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ISR_preserve_s5
   OPERAND2-05
    COMMENT-;Preserve s3 contents during ISR
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-counter
   OPERAND2-06
    COMMENT-;counts down from 255 to 0
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-addition
   OPERAND2-07
    COMMENT-;LSB of accumulator
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-addition2
   OPERAND2-08
    COMMENT-;MSB of accumulator
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Useful data constants
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Constant to define a software delay of 1us. This must be adjusted to reflect the
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; clock applied to KCPSM3. Every instruction executes in 2 clock cycles making the
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; calculation highly predictable. The '6' in the following equation even allows for
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; 'CALL delay_1us' instruction in the initiating code.
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; delay_1us_constant =  (clock_rate - 6)/4       Where 'clock_rate' is in MHz
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Example: For a 50MHz clock the constant value is (50-6)/4 = 11  (0B Hex).
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; For clock rates below 10MHz the value of 1 must be used and the operation will
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; become lower than intended. Interrupts may effect the timing of software based
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; delays.
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-delay_1us_constant
   OPERAND2-0B
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; ASCII table
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_a
   OPERAND2-61
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_b
   OPERAND2-62
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_c
   OPERAND2-63
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_d
   OPERAND2-64
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_e
   OPERAND2-65
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_f
   OPERAND2-66
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_g
   OPERAND2-67
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_h
   OPERAND2-68
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_i
   OPERAND2-69
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_j
   OPERAND2-6A
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_k
   OPERAND2-6B
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_l
   OPERAND2-6C
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_m
   OPERAND2-6D
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_n
   OPERAND2-6E
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_o
   OPERAND2-6F
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_p
   OPERAND2-70
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_q
   OPERAND2-71
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_r
   OPERAND2-72
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_s
   OPERAND2-73
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_t
   OPERAND2-74
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_u
   OPERAND2-75
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_v
   OPERAND2-76
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_w
   OPERAND2-77
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_x
   OPERAND2-78
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_y
   OPERAND2-79
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_z
   OPERAND2-7A
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_A
   OPERAND2-41
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_B
   OPERAND2-42
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_C
   OPERAND2-43
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_D
   OPERAND2-44
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_E
   OPERAND2-45
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_F
   OPERAND2-46
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_G
   OPERAND2-47
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_H
   OPERAND2-48
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_I
   OPERAND2-49
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_J
   OPERAND2-4A
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_K
   OPERAND2-4B
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_L
   OPERAND2-4C
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_M
   OPERAND2-4D
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_N
   OPERAND2-4E
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_O
   OPERAND2-4F
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_P
   OPERAND2-50
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_Q
   OPERAND2-51
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_R
   OPERAND2-52
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_S
   OPERAND2-53
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_T
   OPERAND2-54
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_U
   OPERAND2-55
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_V
   OPERAND2-56
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_W
   OPERAND2-57
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_X
   OPERAND2-58
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_Y
   OPERAND2-59
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_Z
   OPERAND2-5A
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_0
   OPERAND2-30
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_1
   OPERAND2-31
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_2
   OPERAND2-32
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_3
   OPERAND2-33
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_4
   OPERAND2-34
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_5
   OPERAND2-35
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_6
   OPERAND2-36
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_7
   OPERAND2-37
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_8
   OPERAND2-38
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_9
   OPERAND2-39
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_colon
   OPERAND2-3A
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_stop
   OPERAND2-2E
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_semi_colon
   OPERAND2-3B
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_minus
   OPERAND2-2D
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_divide
   OPERAND2-2F
    COMMENT-;'/'
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_plus
   OPERAND2-2B
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_comma
   OPERAND2-2C
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_less_than
   OPERAND2-3C
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_greater_than
   OPERAND2-3E
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_equals
   OPERAND2-3D
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_space
   OPERAND2-20
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_CR
   OPERAND2-0D
    COMMENT-;carriage return
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_question
   OPERAND2-3F
    COMMENT-;'?'
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_dollar
   OPERAND2-24
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_exclaim
   OPERAND2-21
    COMMENT-;'!'
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-character_BS
   OPERAND2-08
    COMMENT-;Back Space command character
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Initialise the system
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-000
      LABEL-cold_start
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-00
    COMMENT-;clear 1 second counter and clear LEDs
    ADDRESS-001
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;STORE s0, LED_port
    ADDRESS-001
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s0
   OPERAND2-LED_port
    COMMENT-
    ADDRESS-002
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-002
      LABEL-
INSTRUCTION-ENABLE
   OPERAND1-INTERRUPT
   OPERAND2-
    COMMENT-;enable one second heart beat
    ADDRESS-003
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-003
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Main program
    ADDRESS-003
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-003
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-003
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Display welcome message for design
    ADDRESS-003
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-003
      LABEL-main_program
INSTRUCTION-CALL
   OPERAND1-delay_1s
   OPERAND2-
    COMMENT-;toggle on
    ADDRESS-004
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s6
   OPERAND2-01
    COMMENT-;  used a register than is not in use by ISR
    ADDRESS-005
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s6
   OPERAND2-led0
    COMMENT-
    ADDRESS-006
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;wait 1 second
    ADDRESS-006
      LABEL-
INSTRUCTION-CALL
   OPERAND1-delay_1s
   OPERAND2-
    COMMENT-; toggle every second
    ADDRESS-007
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s6
   OPERAND2-00
    COMMENT-;  turn off
    ADDRESS-008
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s6
   OPERAND2-led0
    COMMENT-
    ADDRESS-009
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-main_program
   OPERAND2-
    COMMENT-;
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Software delay routines
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of 1us.
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Constant value 'delay_1us_constant' reflects the clock applied to KCPSM3. Every
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; instruction executes in 2 clock cycles making the calculation highly predictable.
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; The '6' in the following equation allows for the 'CALL delay_1us' instruction used
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; in the initiating code. Interrupts may effect software derived delays.
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; delay_1us_constant =  (clock_rate - 6)/4       Where 'clock_rate' is in MHz
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Registers used s0
    ADDRESS-00A
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-00A
      LABEL-delay_1us
INSTRUCTION-LOAD
   OPERAND1-s0
   OPERAND2-delay_1us_constant
    COMMENT-
    ADDRESS-00B
      LABEL-wait_1us
INSTRUCTION-SUB
   OPERAND1-s0
   OPERAND2-01
    COMMENT-
    ADDRESS-00C
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_1us
    COMMENT-
    ADDRESS-00D
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-00E
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-00E
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of 40us.
    ADDRESS-00E
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-00E
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Registers used s0, s1
    ADDRESS-00E
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-00E
      LABEL-delay_40us
INSTRUCTION-LOAD
   OPERAND1-s1
   OPERAND2-28
    COMMENT-;40 x 1us = 40us
    ADDRESS-00F
      LABEL-wait_40us
INSTRUCTION-CALL
   OPERAND1-delay_1us
   OPERAND2-
    COMMENT-
    ADDRESS-010
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s1
   OPERAND2-01
    COMMENT-
    ADDRESS-011
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_40us
    COMMENT-
    ADDRESS-012
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-013
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-013
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-013
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of 1ms.
    ADDRESS-013
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-013
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Registers used s0, s1, s2
    ADDRESS-013
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-013
      LABEL-delay_1ms
INSTRUCTION-LOAD
   OPERAND1-s2
   OPERAND2-19
    COMMENT-;25 x 40us = 1ms
    ADDRESS-014
      LABEL-wait_1ms
INSTRUCTION-CALL
   OPERAND1-delay_40us
   OPERAND2-
    COMMENT-
    ADDRESS-015
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s2
   OPERAND2-01
    COMMENT-
    ADDRESS-016
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_1ms
    COMMENT-
    ADDRESS-017
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-018
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-018
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of 20ms.
    ADDRESS-018
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-018
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of 20ms used during initialisation.
    ADDRESS-018
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-018
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Registers used s0, s1, s2, s3
    ADDRESS-018
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-018
      LABEL-delay_20ms
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-14
    COMMENT-;20 x 1ms = 20ms
    ADDRESS-019
      LABEL-wait_20ms
INSTRUCTION-CALL
   OPERAND1-delay_1ms
   OPERAND2-
    COMMENT-
    ADDRESS-01A
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s3
   OPERAND2-01
    COMMENT-
    ADDRESS-01B
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_20ms
    COMMENT-
    ADDRESS-01C
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-01D
      LABEL-delay_100ms
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-64
    COMMENT-;100 x 1ms = 20ms
    ADDRESS-01E
      LABEL-wait_100ms
INSTRUCTION-CALL
   OPERAND1-delay_1ms
   OPERAND2-
    COMMENT-
    ADDRESS-01F
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s3
   OPERAND2-01
    COMMENT-
    ADDRESS-020
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_100ms
    COMMENT-
    ADDRESS-021
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-022
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-022
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Delay of approximately 1 second.
    ADDRESS-022
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-022
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Registers used s0, s1, s2, s3, s4
    ADDRESS-022
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-022
      LABEL-delay_1s
INSTRUCTION-LOAD
   OPERAND1-s4
   OPERAND2-32
    COMMENT-;50 x 20ms = 1000ms
    ADDRESS-023
      LABEL-wait_1s
INSTRUCTION-CALL
   OPERAND1-delay_20ms
   OPERAND2-
    COMMENT-
    ADDRESS-024
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s4
   OPERAND2-01
    COMMENT-
    ADDRESS-025
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-wait_1s
    COMMENT-
    ADDRESS-026
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-027
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-027
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-027
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-027
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-027
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Interrupt Service Routine (ISR)
    ADDRESS-027
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-027
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-027
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; The interrupt is used purely to provide a 1 second heart beat binary counter pattern
    ADDRESS-027
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; on the 8 LEDs.
    ADDRESS-027
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;gave myself 5 registers to use during ISR
    ADDRESS-027
      LABEL-ISR
INSTRUCTION-STORE
   OPERAND1-s0
   OPERAND2-ISR_preserve_s0
    COMMENT-;preserve register  //input value of new data in s0
    ADDRESS-028
      LABEL-
INSTRUCTION-STORE
   OPERAND1-s1
   OPERAND2-ISR_preserve_s1
    COMMENT-;preserve register  //new value in s1
    ADDRESS-029
      LABEL-
INSTRUCTION-STORE
   OPERAND1-s2
   OPERAND2-ISR_preserve_s2
    COMMENT-;preserve register
    ADDRESS-02A
      LABEL-
INSTRUCTION-STORE
   OPERAND1-s3
   OPERAND2-ISR_preserve_s3
    COMMENT-;preserve register
    ADDRESS-02B
      LABEL-
INSTRUCTION-STORE
   OPERAND1-s4
   OPERAND2-ISR_preserve_s4
    COMMENT-;preserve register
    ADDRESS-02C
      LABEL-
INSTRUCTION-STORE
   OPERAND1-s5
   OPERAND2-ISR_preserve_s5
    COMMENT-;preserve register  // counter for 256
    ADDRESS-02D
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-s5
   OPERAND2-counter
    COMMENT-
    ADDRESS-02E
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-s1
   OPERAND2-addition
    COMMENT-
    ADDRESS-02F
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-s2
   OPERAND2-addition2
    COMMENT-
    ADDRESS-030
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;JUMP countdown
    ADDRESS-030
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-s0
   OPERAND2-DATA_IN_PORT
    COMMENT-
    ADDRESS-031
      LABEL-
INSTRUCTION-TEST
   OPERAND1-s0
   OPERAND2-80
    COMMENT-
    ADDRESS-032
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
   OPERAND2-2scompliment
    COMMENT-
    ADDRESS-033
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-additionstep
   OPERAND2-
    COMMENT-
    ADDRESS-034
      LABEL-2scompliment
INSTRUCTION-XOR
   OPERAND1-s0
   OPERAND2-FF
    COMMENT-;; Xoring the bits of s0 to find 2s compliment
    ADDRESS-035
      LABEL-
INSTRUCTION-ADD
   OPERAND1-s0
   OPERAND2-01
    COMMENT-;; Add 1 to finish finding 2's compliment
    ADDRESS-036
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-additionstep
   OPERAND2-
    COMMENT-
    ADDRESS-037
      LABEL-additionstep
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-037
      LABEL-
INSTRUCTION-ADD
   OPERAND1-s1
   OPERAND2-s0
    COMMENT-
    ADDRESS-038
      LABEL-
INSTRUCTION-ADDCY
   OPERAND1-s2
   OPERAND2-00
    COMMENT-
    ADDRESS-039
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-inccount
   OPERAND2-
    COMMENT-
    ADDRESS-03A
      LABEL-inccount
INSTRUCTION-COMPARE
   OPERAND1-s5
   OPERAND2-FF
    COMMENT-
    ADDRESS-03B
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-displayresult
    COMMENT-
    ADDRESS-03C
      LABEL-
INSTRUCTION-ADD
   OPERAND1-s5
   OPERAND2-01
    COMMENT-
    ADDRESS-03D
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-ISR_done
   OPERAND2-
    COMMENT-
    ADDRESS-03E
      LABEL-displayresult
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-03E
      LABEL-
INSTRUCTION-TEST
   OPERAND1-s2
   OPERAND2-80
    COMMENT-
    ADDRESS-03F
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-SIX
    COMMENT-
    ADDRESS-040
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-FF
    COMMENT-
    ADDRESS-041
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s3
   OPERAND2-LED_port
    COMMENT-
    ADDRESS-042
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-restart
   OPERAND2-
    COMMENT-
    ADDRESS-043
      LABEL-SIX
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-043
      LABEL-
INSTRUCTION-TEST
   OPERAND1-s2
   OPERAND2-40
    COMMENT-
    ADDRESS-044
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-FIVE
    COMMENT-
    ADDRESS-045
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-FE
    COMMENT-
    ADDRESS-046
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s3
   OPERAND2-LED_port
    COMMENT-
    ADDRESS-047
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-restart
   OPERAND2-
    COMMENT-
    ADDRESS-048
      LABEL-FIVE
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-048
      LABEL-
INSTRUCTION-TEST
   OPERAND1-s2
   OPERAND2-20
    COMMENT-
    ADDRESS-049
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-FOUR
    COMMENT-
    ADDRESS-04A
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-FC
    COMMENT-
    ADDRESS-04B
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s3
   OPERAND2-LED_port
    COMMENT-
    ADDRESS-04C
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-restart
   OPERAND2-
    COMMENT-
    ADDRESS-04D
      LABEL-FOUR
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-04D
      LABEL-
INSTRUCTION-TEST
   OPERAND1-s2
   OPERAND2-10
    COMMENT-
    ADDRESS-04E
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-THREE
    COMMENT-
    ADDRESS-04F
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-F8
    COMMENT-
    ADDRESS-050
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s3
   OPERAND2-LED_port
    COMMENT-
    ADDRESS-051
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-restart
   OPERAND2-
    COMMENT-
    ADDRESS-052
      LABEL-THREE
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-052
      LABEL-
INSTRUCTION-TEST
   OPERAND1-s2
   OPERAND2-08
    COMMENT-
    ADDRESS-053
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-TWO
    COMMENT-
    ADDRESS-054
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-F0
    COMMENT-
    ADDRESS-055
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s3
   OPERAND2-LED_port
    COMMENT-
    ADDRESS-056
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-restart
   OPERAND2-
    COMMENT-
    ADDRESS-057
      LABEL-TWO
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-057
      LABEL-
INSTRUCTION-TEST
   OPERAND1-s2
   OPERAND2-04
    COMMENT-
    ADDRESS-058
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-ONE
    COMMENT-
    ADDRESS-059
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-E0
    COMMENT-
    ADDRESS-05A
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s3
   OPERAND2-LED_port
    COMMENT-
    ADDRESS-05B
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-restart
   OPERAND2-
    COMMENT-
    ADDRESS-05C
      LABEL-ONE
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-05C
      LABEL-
INSTRUCTION-TEST
   OPERAND1-s2
   OPERAND2-02
    COMMENT-
    ADDRESS-05D
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-ZERO
    COMMENT-
    ADDRESS-05E
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-C0
    COMMENT-
    ADDRESS-05F
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s3
   OPERAND2-LED_port
    COMMENT-
    ADDRESS-060
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-restart
   OPERAND2-
    COMMENT-
    ADDRESS-061
      LABEL-ZERO
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-061
      LABEL-
INSTRUCTION-TEST
   OPERAND1-s2
   OPERAND2-01
    COMMENT-
    ADDRESS-062
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
   OPERAND2-ISR_done
    COMMENT-
    ADDRESS-063
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-80
    COMMENT-
    ADDRESS-064
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s3
   OPERAND2-LED_port
    COMMENT-
    ADDRESS-065
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-restart
   OPERAND2-
    COMMENT-
    ADDRESS-066
      LABEL-ISR_done
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-066
      LABEL-
INSTRUCTION-STORE
   OPERAND1-s5
   OPERAND2-counter
    COMMENT-
    ADDRESS-067
      LABEL-
INSTRUCTION-STORE
   OPERAND1-s1
   OPERAND2-addition
    COMMENT-
    ADDRESS-068
      LABEL-
INSTRUCTION-STORE
   OPERAND1-s2
   OPERAND2-addition2
    COMMENT-
    ADDRESS-069
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-s0
   OPERAND2-ISR_preserve_s0
    COMMENT-;restore register
    ADDRESS-06A
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-s1
   OPERAND2-ISR_preserve_s1
    COMMENT-;restore register
    ADDRESS-06B
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-s2
   OPERAND2-ISR_preserve_s2
    COMMENT-;restore register
    ADDRESS-06C
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-s3
   OPERAND2-ISR_preserve_s3
    COMMENT-;restore register
    ADDRESS-06D
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-s4
   OPERAND2-ISR_preserve_s4
    COMMENT-;restore register
    ADDRESS-06E
      LABEL-
INSTRUCTION-FETCH
   OPERAND1-s5
   OPERAND2-ISR_preserve_s5
    COMMENT-;restore register
    ADDRESS-06F
      LABEL-
INSTRUCTION-RETURNI
   OPERAND1-ENABLE
   OPERAND2-
    COMMENT-; RETURNI ENABLE determines the future ability of interrupt
    ADDRESS-070
      LABEL-restart
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-
    ADDRESS-070
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s3
   OPERAND2-00
    COMMENT-;; doing the process 256 times
    ADDRESS-071
      LABEL-
INSTRUCTION-STORE
   OPERAND1-s3
   OPERAND2-counter
    COMMENT-
    ADDRESS-072
      LABEL-
INSTRUCTION-STORE
   OPERAND1-s3
   OPERAND2-addition
    COMMENT-
    ADDRESS-073
      LABEL-
INSTRUCTION-STORE
   OPERAND1-s3
   OPERAND2-addition2
    COMMENT-
    ADDRESS-074
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-ISR_done
   OPERAND2-
    COMMENT-
    ADDRESS-075
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-075
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-075
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-075
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-; Interrupt Vector
    ADDRESS-075
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;**************************************************************************************
    ADDRESS-075
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-3FF
      LABEL-
INSTRUCTION-ADDRESS
   OPERAND1-3FF
   OPERAND2-
    COMMENT-
    ADDRESS-3FF
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-ISR
   OPERAND2-
    COMMENT-
    ADDRESS-3FF
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
    ADDRESS-3FF
      LABEL-
INSTRUCTION-
   OPERAND1-
   OPERAND2-
    COMMENT-;
